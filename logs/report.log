[2023-04-13T14:42:00.316] [INFO] report - <ref *1> Job {
  agenda: Agenda {
    _events: [Object: null prototype] { ready: [Function (anonymous)] },
    _eventsCount: 1,
    _maxListeners: undefined,
    _findAndLockNextJob: [Function: findAndLockNextJob],
    _name: undefined,
    _processEvery: 5000,
    _defaultConcurrency: 5,
    _maxConcurrency: 20,
    _defaultLockLimit: 0,
    _lockLimit: 0,
    _definitions: { 'user-count': [Object] },
    _runningJobs: [ [Circular *1] ],
    _lockedJobs: [ [Circular *1] ],
    _jobQueue: JobProcessingQueue { _queue: [] },
    _defaultLockLifetime: 600000,
    _sort: { nextRunAt: 1, priority: -1 },
    _indices: { name: 1, nextRunAt: 1, priority: -1, lockedAt: 1, disabled: 1 },
    _disableAutoIndex: false,
    _isLockingOnTheFly: false,
    _isJobQueueFilling: Map(0) {},
    _jobsToLock: [],
    _ready: Promise { undefined },
    _db: MongoClient {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      mongoLogger: [MongoLogger],
      s: [Object],
      topology: [Topology],
      [Symbol(kCapture)]: false,
      [Symbol(options)]: [Object: null prototype]
    },
    _mdb: Db { s: [Object] },
    _collection: Collection { s: [Object] },
    _processInterval: Timeout {
      _idleTimeout: 5000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 66098,
      _onTimeout: [Function: bound processJobs],
      _timerArgs: undefined,
      _repeat: 5000,
      _destroyed: false,
      [Symbol(refed)]: true,
      [Symbol(kHasPrimitive)]: false,
      [Symbol(asyncId)]: 115,
      [Symbol(triggerId)]: 0
    },
    _nextScanAt: 2023-04-13T07:42:05.291Z,
    [Symbol(kCapture)]: false
  },
  attrs: {
    _id: new ObjectId("6437a3be10a2f59568886a62"),
    name: 'user-count',
    data: { name: 'Your medatada goes here...' },
    priority: 0,
    shouldSaveResult: false,
    repeatInterval: '1 minute',
    repeatTimezone: null,
    startDate: null,
    endDate: null,
    skipDays: null,
    lastModifiedBy: null,
    lockedAt: 2023-04-13T07:42:00.284Z,
    lastRunAt: 2023-04-13T07:42:00.306Z,
    lastFinishedAt: 2023-04-13T07:30:57.986Z,
    type: 'normal',
    nextRunAt: 2023-04-13T07:43:00.306Z
  }
}
[2023-04-13T14:42:00.319] [INFO] report - Job user-count start.
[2023-04-13T14:42:00.382] [INFO] report - Successfully created report.
[2023-04-13T14:43:00.319] [INFO] report - <ref *1> Job {
  agenda: Agenda {
    _events: [Object: null prototype] { ready: [Function (anonymous)] },
    _eventsCount: 1,
    _maxListeners: undefined,
    _findAndLockNextJob: [Function: findAndLockNextJob],
    _name: undefined,
    _processEvery: 5000,
    _defaultConcurrency: 5,
    _maxConcurrency: 20,
    _defaultLockLimit: 0,
    _lockLimit: 0,
    _definitions: { 'user-count': [Object] },
    _runningJobs: [ [Circular *1] ],
    _lockedJobs: [ [Circular *1] ],
    _jobQueue: JobProcessingQueue { _queue: [] },
    _defaultLockLifetime: 600000,
    _sort: { nextRunAt: 1, priority: -1 },
    _indices: { name: 1, nextRunAt: 1, priority: -1, lockedAt: 1, disabled: 1 },
    _disableAutoIndex: false,
    _isLockingOnTheFly: false,
    _isJobQueueFilling: Map(0) {},
    _jobsToLock: [],
    _ready: Promise { undefined },
    _db: MongoClient {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      mongoLogger: [MongoLogger],
      s: [Object],
      topology: [Topology],
      [Symbol(kCapture)]: false,
      [Symbol(options)]: [Object: null prototype]
    },
    _mdb: Db { s: [Object] },
    _collection: Collection { s: [Object] },
    _processInterval: Timeout {
      _idleTimeout: 5000,
      _idlePrev: [TimersList],
      _idleNext: [TimersList],
      _idleStart: 31506,
      _onTimeout: [Function: bound processJobs],
      _timerArgs: undefined,
      _repeat: 5000,
      _destroyed: false,
      [Symbol(refed)]: true,
      [Symbol(kHasPrimitive)]: false,
      [Symbol(asyncId)]: 115,
      [Symbol(triggerId)]: 0
    },
    _nextScanAt: 2023-04-13T07:43:04.807Z,
    [Symbol(kCapture)]: false
  },
  attrs: {
    _id: new ObjectId("6437a3be10a2f59568886a62"),
    name: 'user-count',
    data: { name: 'Your medatada goes here...' },
    priority: 0,
    shouldSaveResult: false,
    repeatInterval: '1 minute',
    repeatTimezone: null,
    startDate: null,
    endDate: null,
    skipDays: null,
    lastModifiedBy: null,
    lockedAt: 2023-04-13T07:42:59.802Z,
    lastRunAt: 2023-04-13T07:43:00.309Z,
    lastFinishedAt: 2023-04-13T07:42:00.383Z,
    type: 'normal',
    nextRunAt: 2023-04-13T07:44:00.309Z
  }
}
[2023-04-13T14:43:00.324] [INFO] report - Job user-count start.
[2023-04-13T14:43:00.389] [INFO] report - Successfully created report.
[2023-04-13T14:44:00.314] [INFO] report - <ref *1> Job {
  agenda: Agenda {
    _events: [Object: null prototype] { ready: [Function (anonymous)] },
    _eventsCount: 1,
    _maxListeners: undefined,
    _findAndLockNextJob: [Function: findAndLockNextJob],
    _name: undefined,
    _processEvery: 5000,
    _defaultConcurrency: 5,
    _maxConcurrency: 20,
    _defaultLockLimit: 0,
    _lockLimit: 0,
    _definitions: { 'user-count': [Object] },
    _runningJobs: [ [Circular *1] ],
    _lockedJobs: [ [Circular *1] ],
    _jobQueue: JobProcessingQueue { _queue: [] },
    _defaultLockLifetime: 600000,
    _sort: { nextRunAt: 1, priority: -1 },
    _indices: { name: 1, nextRunAt: 1, priority: -1, lockedAt: 1, disabled: 1 },
    _disableAutoIndex: false,
    _isLockingOnTheFly: false,
    _isJobQueueFilling: Map(0) {},
    _jobsToLock: [],
    _ready: Promise { undefined },
    _db: MongoClient {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      mongoLogger: [MongoLogger],
      s: [Object],
      topology: [Topology],
      [Symbol(kCapture)]: false,
      [Symbol(options)]: [Object: null prototype]
    },
    _mdb: Db { s: [Object] },
    _collection: Collection { s: [Object] },
    _processInterval: Timeout {
      _idleTimeout: 5000,
      _idlePrev: [TimersList],
      _idleNext: [TimersList],
      _idleStart: 91515,
      _onTimeout: [Function: bound processJobs],
      _timerArgs: undefined,
      _repeat: 5000,
      _destroyed: false,
      [Symbol(refed)]: true,
      [Symbol(kHasPrimitive)]: false,
      [Symbol(asyncId)]: 115,
      [Symbol(triggerId)]: 0
    },
    _nextScanAt: 2023-04-13T07:44:04.817Z,
    [Symbol(kCapture)]: false
  },
  attrs: {
    _id: new ObjectId("6437a3be10a2f59568886a62"),
    name: 'user-count',
    data: { name: 'Your medatada goes here...' },
    priority: 0,
    shouldSaveResult: false,
    repeatInterval: '1 minute',
    repeatTimezone: null,
    startDate: null,
    endDate: null,
    skipDays: null,
    lastModifiedBy: null,
    lockedAt: 2023-04-13T07:43:59.814Z,
    lastRunAt: 2023-04-13T07:44:00.310Z,
    lastFinishedAt: 2023-04-13T07:43:00.389Z,
    type: 'normal',
    nextRunAt: 2023-04-13T07:45:00.310Z
  }
}
[2023-04-13T14:44:00.316] [INFO] report - Job user-count start.
[2023-04-13T14:44:00.337] [INFO] report - Successfully created report.
[2023-04-13T14:45:00.315] [INFO] report - <ref *1> Job {
  agenda: Agenda {
    _events: [Object: null prototype] { ready: [Function (anonymous)] },
    _eventsCount: 1,
    _maxListeners: undefined,
    _findAndLockNextJob: [Function: findAndLockNextJob],
    _name: undefined,
    _processEvery: 5000,
    _defaultConcurrency: 5,
    _maxConcurrency: 20,
    _defaultLockLimit: 0,
    _lockLimit: 0,
    _definitions: { 'user-count': [Object] },
    _runningJobs: [ [Circular *1] ],
    _lockedJobs: [ [Circular *1] ],
    _jobQueue: JobProcessingQueue { _queue: [] },
    _defaultLockLifetime: 600000,
    _sort: { nextRunAt: 1, priority: -1 },
    _indices: { name: 1, nextRunAt: 1, priority: -1, lockedAt: 1, disabled: 1 },
    _disableAutoIndex: false,
    _isLockingOnTheFly: false,
    _isJobQueueFilling: Map(0) {},
    _jobsToLock: [],
    _ready: Promise { undefined },
    _db: MongoClient {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      mongoLogger: [MongoLogger],
      s: [Object],
      topology: [Topology],
      [Symbol(kCapture)]: false,
      [Symbol(options)]: [Object: null prototype]
    },
    _mdb: Db { s: [Object] },
    _collection: Collection { s: [Object] },
    _processInterval: Timeout {
      _idleTimeout: 5000,
      _idlePrev: [TimersList],
      _idleNext: [TimersList],
      _idleStart: 151532,
      _onTimeout: [Function: bound processJobs],
      _timerArgs: undefined,
      _repeat: 5000,
      _destroyed: false,
      [Symbol(refed)]: true,
      [Symbol(kHasPrimitive)]: false,
      [Symbol(asyncId)]: 115,
      [Symbol(triggerId)]: 0
    },
    _nextScanAt: 2023-04-13T07:45:04.834Z,
    [Symbol(kCapture)]: false
  },
  attrs: {
    _id: new ObjectId("6437a3be10a2f59568886a62"),
    name: 'user-count',
    data: { name: 'Your medatada goes here...' },
    priority: 0,
    shouldSaveResult: false,
    repeatInterval: '1 minute',
    repeatTimezone: null,
    startDate: null,
    endDate: null,
    skipDays: null,
    lastModifiedBy: null,
    lockedAt: 2023-04-13T07:44:59.832Z,
    lastRunAt: 2023-04-13T07:45:00.310Z,
    lastFinishedAt: 2023-04-13T07:44:00.337Z,
    type: 'normal',
    nextRunAt: 2023-04-13T07:46:00.310Z
  }
}
[2023-04-13T14:45:00.318] [INFO] report - Job user-count start.
[2023-04-13T14:45:00.349] [INFO] report - Successfully created report.
